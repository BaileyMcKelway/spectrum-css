:root {
  --spectrum-colorarea-width: calc(var(--spectrum-global-dimension-size-125) * 16);
  --spectrum-colorarea-height: var(--spectrum-colorarea-width);
  --spectrum-colorarea-border-radius: var(--spectrum-alias-border-radius-regular);
}

%spectrum-ColorControl-hiddenField {
  opacity: 0.0001;
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  z-index: 0;
  margin: 0;
  pointer-events: none;
}

%spectrum-ColorControl-handle--focused {
  /* Bigger handle when focused */
  width: calc(var(--spectrum-colorhandle-size) * 2);
  height: calc(var(--spectrum-colorhandle-size) * 2);

  margin-left: calc(-1 * var(--spectrum-colorhandle-size));
  margin-top: calc(-1 * var(--spectrum-colorhandle-size));
}

.spectrum-ColorArea {
  position: relative;
  display: inline-block;
  width: var(--spectrum-colorarea-width);
  height: var(--spectrum-colorarea-height);

  cursor: default;

  user-select: none;

  &.is-focused {
    z-index: 2;

    .spectrum-ColorArea-handle {
      @extend %spectrum-ColorControl-handle--focused;
    }
  }

  &.is-disabled {
    pointer-events: none;
  }
}

.spectrum-ColorArea-handle {
  left: 0;
  top: 0;
}

.spectrum-ColorArea-gradient {
  width: 100%;
  height: 100%;
  border-radius: var(--spectrum-colorarea-border-radius);

  box-shadow: inset 0 0 0 var(--spectrum-colorwheel-stroke-width) var(--spectrum-colorwheel-stroke-color);
}

.spectrum-ColorArea-slider {
  @extend %spectrum-ColorControl-hiddenField;
}
